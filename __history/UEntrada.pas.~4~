unit UEntrada;

interface

uses
  UProduto, UDM, ZDataSet;

type

  TEntrada = class 

  private
    FId: Integer;
    FProduto: TProduto;
    FDataHora: TDateTime;
    FQuantidade: Integer;
    function getDataHora: TDateTime;
    function getId: Integer;
    function getProduto: TProduto;
    function getQuantidade: Integer;
    procedure setId(const Value: Integer);
    procedure setProduto(const Value: TProduto);
    procedure setQuantidade(const Value: Integer);
    procedure setDataHora(const Value: TDateTime);

  public
    property id: Integer read getId write setId;
    property produto: TProduto read getProduto write setProduto;
    property dataHora: TDateTime read getDataHora write setDataHora;
    property quantidade: Integer read getQuantidade write setQuantidade;
    procedure finalizarEnrada(obj : TEntrada);

  end;

implementation

{ TEntrada }

function TEntrada.getDataHora: TDateTime;
begin
  Result := FDataHora;
end;

function TEntrada.getId: Integer;
begin
  Result := FId;
end;

function TEntrada.getProduto: TProduto;
begin
  Result := FProduto;
end;

function TEntrada.getQuantidade: Integer;
begin
  Result := FQuantidade;
end;

procedure TEntrada.setDataHora(const Value: TDateTime);
begin
  FDataHora := Value;
end;

procedure TEntrada.setId(const Value: Integer);
begin
  FId := Value;
end;

procedure TEntrada.setProduto(const Value: TProduto);
begin
  FProduto := Value;
end;

procedure TEntrada.setQuantidade(const Value: Integer);
begin
  FQuantidade := Value;
end;

end.
